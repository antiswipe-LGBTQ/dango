.ButtonBase {
    display: inline-block;
    cursor: pointer;
    font: var(--ft-m);
    font-weight: 500;
    line-height: 1;
    position: relative;
    text-align: center;

    background-color: var(--color-cherry);
    padding: 15px 20px;
    border-radius: 30px;
    border: 1px solid var(--color-cherry);

    color: var(--color-white);
    transition: all 100ms ease;

    &:hover {
        color: var(--color-cherry);
        background-color: transparent;
        border-color: var(--color-cherry);

        &::after {
            transform: translate3d(1px, 1px, 0);
            opacity: 0.25;
        }
    }

    &:active {
        transform: scale(0.98);
    }

    &::after {
        content: "";
        display: block;
        position: absolute;
        top: 5px;
        left: 5px;
        width: 100%;
        height: 100%;
        @include pattern-spotted("cherry");
        transition: all 100ms ease;
        border-radius: 30px;
    }
}

.ButtonBase_content {
    display: flex;
    height: 100%;
    align-items: center;
    justify-content: center;
    position: relative;
    z-index: 1;
}

/* MODIFIERS */

.ButtonBase--s {
    font: var(--ft-s);
    font-weight: 500;
    line-height: 1;
    padding: 12px 15px;

    &::after {
        top: 4px;
        left: 4px;
    }
}

.ButtonBase--no-shadow {
    
    &::after {
        display: none;
    }
}

@each $color in $main-colors {
    .ButtonBase--#{$color} {
        background-color: var(--color-#{$color});
        border-color: var(--color-#{$color});

        &::after {
            @include pattern-spotted($color);
        }

        &:hover {
            color: var(--color-#{$color});
            background-color: transparent;
            border-color: var(--color-#{$color});
        }
    }
}

.ButtonBase--secondary {
    color: var(--color-cherry);
    background-color: transparent;

    &::after {
        opacity: 0.15;
        transform: translate3d(1px, 1px, 0);
    }

    &:hover {
        color: var(--color-white);
        background-color: var(--color-cherry);

        &::after {
            opacity: 1;
            transform: translate3d(0, 0, 0);
        }
    }
    
    @each $color in $main-colors {
        &.ButtonBase--#{$color} {
            color: var(--color-#{$color});
    
            &:hover {
                color: var(--color-white);
                background-color: var(--color-#{$color});
            }
        }
    }
}

.ButtonBase--round {
    width: 50px;
    height: 50px;
    border-radius: 50%;
    padding: 0;
    align-items: center;
    justify-content: center;
}

.ButtonBase--round.ButtonBase--s {
    width: 40px;
    height: 40px;
}

.ButtonBase--round.ButtonBase--l {
    width: 60px;
    height: 60px;
    font-size: 18px;
}

.ButtonBase_iconLoading {
    pointer-events: none;
    font-size: 150%;
    position: absolute;
    z-index: 3;
    top: 50%;
    left: 50%;
    transform: translate3d(-50%, -50%, 0);
    line-height: 1;
    opacity: 0;
    animation: baseSpin 1000ms cubic-bezier(0.39, 0.32, 0.18, 0.87) 0s infinite;
}

.ButtonBase_iconBefore + .ButtonBase_text {
    margin-left: 10px;
}

@keyframes baseSpin {
    0% {
        transform: translate3d(-50%, -50%, 0) rotate(0deg);
    }

    100% {
        transform: translate3d(-50%, -50%, 0) rotate(360deg);
    }
}

.ButtonBase.is-loading {
    pointer-events: none;

    .ButtonBase_content {
        transform: scale(0.95);
        opacity: 0.5;
    }

    .ButtonBase_iconLoading {
        opacity: 1;
    }
}

.ButtonBase.is-disabled {
    pointer-events: none;
    opacity: 0.5;
}